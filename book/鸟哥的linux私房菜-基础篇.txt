0.计算机概论
为什么我们都会说，要加快系统效能，通常将内存容量加大就可以获得相当好的成效？
如同下图以及上面的说明，因为所有的数据都要经过主存储器的传输， 所以内存的容量如果太小，数据快取就不
足～影响效能相当大啊！尤其针对 Linux 作为服务器的环境下！这点要特别记忆喔！

这就是目前世界上常见到的两种主要 CPU 架构， 分别是：精简指令集 (RISC) 与复杂指令集 (CISC) 系统

在应用方面， SPARC CPU 的计算机常用于学术领域的大型工作站中，包括银行金融体系的主服务器
也都有这类的计算机架构； 至于 PowerPC 架构的应用上，例如新力(Sony)公司出产的 Play Station
3(PS3)就是使用 PowerPC 架构的 Cell 处理器； 那安谋的 ARM 呢？你常使用的各厂牌手机、 PDA、
导航系统、网络设备(交换器、路由器等)等，几乎都是使用 ARM 架构的 CPU 喔！ 

与 RISC 不同的， CISC 在微指令集的每个小指令可以执行一些较低阶的硬件操作，指令数目多而且
复杂， 每条指令的长度并不相同。因为指令执行较为复杂所以每条指令花费的时间较长， 但每条个
别指令可以处理的工作较为丰富。常见的 CISC 微指令集 CPU 主要有 AMD、 Intel、 VIA 等的 x86 架
构的 CPU。

由于 AMD、 Intel、 VIA 所开发出来的 x86 架构 CPU 被大量使用于个人计算机(Personal computer)用途
上面， 因此，个人计算机常被称为 x86 架构的计算机！那为何称为 x86 架构(注 8)呢？ 这是因为最
早的那颗 Intel 发展出来的 CPU 代号称为 8086，后来依此架构又开发出 80286, 80386...， 因此这种架
构的 CPU 就被称为 x86 架构了。

在 2003 年以前由 Intel 所开发的 x86 架构 CPU 由 8 位升级到 16、 32 位，后来 AMD 依此架构修改新
一代的 CPU 为 64 位， 为了区别两者的差异，因此 64 位的个人计算机 CPU 又被统称为 x86_64 的架
构喔！

/etc/issue

date +%y/%m/%d/%T

locale 10 2017

cal 10 2015

bc

[Tab] 接在一串指令的第一个字的后面，则为『命令补全』；
[Tab] 接在一串指令的第二个字以后时，则为『 文件补齐』！

命令--之后两次tab

[Ctrl]-d 就能够直接离开了(相当于输入 exit 啊！ )

[Shift]+[Page Up] 来往前翻页，也能够使用 [Shift]+[Page Down] 来往后翻页！


man Page
空格键 向下翻一页
page down 向下翻一页
page up  向上翻一页
home  去第一页
end   去最后一页
/string 向下搜寻string
?string  向下搜索string
n 下一个搜寻
N 反向搜索
q  离开

/usr/share/man
/usr/share/doc


whatis tar

#数据同步写入磁盘
sync

echo $LANG 等同于 locale



5.Linux的文件权限与目录配置

owner/group/others
read/write/execute
r:4  w:2  x:1

# 账号信息
/etc/passwd
# 密码信息
/etc/shadow
# 群组信息
/etc/group


当为[ d ]则是目录
当为[ - ]则是文件
若是[ l ]则表示为link file
若是[ b ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；
若是[ c ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。

第五栏为这个文件的容量大小，默认单位为 bytes；
第六栏为这个文件的建档日期或者是最近的修改日期：

chgrp -R group file/dir：改变文件所属群组
chown -R user:group file/dir：改变文件拥有者
chmod -R 777 file/dir：改变文件的权限, SUID, SGID, SBIT 等等的特性

-------------------------------------
       |   u   |       |      |      |
 chmod |   g   | +(加入)|   r  | 文件  |
       |   o   | -(除去)|   w  |  或  |
       |   a   | =(设定)|   x  | 目录 |
--------------------------------------

# ,号前后没有空格
chmod u=rwx,go=rx file


[-] regular文件
[d] 目录
[l] link文件
[b] 区块设备文件，硬盘，软盘  /dev/sda
[c] 字符设备文件，键盘，鼠标  /dev
[s] sockets文件  /tmp   /run
[p] FIFO文件

*.sh ： 脚本或批处理文件 (scripts)，因为批处理文件为使用 shell 写成的，所以扩展名就编成 .sh 啰；

/usr (软件放置处) /etc (配置文件)
/opt (第三方协力软件) /boot (开机与核心档)

/ (root, 根目录)：与开机系统有关；
/usr (unix software resource)：与软件安装/执行有关；
/var (variable)：与系统运作过程有关
/media 底下放置的就是可移除的装置啦！包括软盘、光盘、DVD 等等装置都暂时挂载于此。常见的档名有： /media/floppy, /media/cdrom 

/lost+found
这个目录是使用标准的 ext2/ext3/ext4 文件系统格式才会产生的一个目录，目的在于当文件系统发生
错误时， 将一些遗失的片段放置到这个目录下。不过如果使用的是 xfs 文件系统的话，就不会存在
这个目录了！


/proc
这个目录本身是一个『虚拟文件系统(virtual filesystem)』喔！他放置的数据都是在内存当中， 例如系
统核心、行程信息(process)、周边装置的状态及网络状态等等。因为这个目录下的数据都是在内存当
中， 所以本身不占任何硬盘空间啊！比较重要的文件例如： /proc/cpuinfo, /proc/dma, /proc/interrupts,/proc/ioports, /proc/net/* 等等。

/sys
这个目录其实跟/proc 非常类似，也是一个虚拟的文件系统，主要也是记录核心与系统硬件信息较相
关的信息。 包括目前已加载的核心模块与核心侦测到的硬件装置信息等等。这个目录同样不占硬盘
容量喔！

很多读者都会误会/usr 为 user 的缩写，其实 usr 是 Unix Software Resource 的缩写， 也就是『 Unix 操
作系统软件资源』所放置的目录，而不是用户的数据啦！

#完全复制(包括属性)
cp -a
# 删除之前交互
rm -i

# 与cat查看文件的内容相反
tac filename
#显示行号
nl filename

